///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;
using CworkTestLib;
namespace CworkTestLib
{
	public partial class CallMultiSendProgApi
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void CalMultilSendProgApiCode(int CncId, string DocumentName1, string DocExtension1, string SourceFolder1, string DocumentName2, string DocExtension2, string SourceFolder2, string User, string psw, string ExpectedRes)
		{
			string station = CncId.ToString();
			string EndPoint = "stations/"+station+"/multisend/";
			string url = " http://localhost:4445/CAPI/REST/"+EndPoint;
			object body;
			if ( DocumentName2.Equals("") ) {
				body = new {
					Documents = new [] {
						new	{
							DocumentName= DocumentName1,
							DocExtension= DocExtension1,
							SourceFolder= SourceFolder1
						}
					}
				};
				
			}
			else {
				body = new {
					Documents = new [] {
						new	{
							DocumentName= DocumentName1,
							DocExtension= DocExtension1,
							SourceFolder= SourceFolder1
						},
						new {
							DocumentName= DocumentName2,
							DocExtension= DocExtension2,
							SourceFolder= SourceFolder2
						}
					}};

			}

			string ResAPICall = RestAPIMethods.SendPost(url, User, psw, body);
			
			Report.Log(ReportLevel.Info, "Query  "+ url);
			Report.Log(ReportLevel.Info, "ResAPICall  "+ ResAPICall);
			
			// verify response
			if (!ResAPICall.Equals(ExpectedRes))
			{
				Report.Failure("Validation","Responce expected " + ExpectedRes + " received " + ResAPICall);
			}
		}

	}
}
