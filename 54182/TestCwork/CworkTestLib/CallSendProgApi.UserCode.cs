///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;
using CworkTestLib;

namespace CworkTestLib
{
    public partial class CallSendProgApi
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        public void CallSendProgApiCode(int CncId, string DocumentName, string DocExtension, string SourceFolder, string User, string psw, string ExpectedRes, string DestinationFolder, string DestinationFolderMode, bool Override)
        {
			string station = CncId.ToString();
			string EndPoint = "stations/"+station+"/Send/";
			string url = " http://localhost:4445/CAPI/REST/"+EndPoint;
			object body;
			if ( DestinationFolderMode != "" )
			{
				body = new{
					DocumentName= DocumentName,
					DocExtension= DocExtension,
					SourceFolder= SourceFolder,
					DestinationFolder= DestinationFolder,
					DestinationFolderMode= DestinationFolderMode,
					Override= Override
				};
			}
			else
			{
			
				body = new{
					DocumentName= DocumentName,
					DocExtension= DocExtension,
					SourceFolder= SourceFolder,
					DestinationFolder= DestinationFolder,
					Override= Override
				};	
			}
	
			string ResAPICall = RestAPIMethods.SendPost(url, User, psw, body);
			
			Report.Log(ReportLevel.Info, "Query  "+ url);
			Report.Log(ReportLevel.Info, "ResAPICall  "+ ResAPICall);
			Report.Log(ReportLevel.Info, "Body  "+ body.ToString());
			
			// verify response 
			if (!ResAPICall.Contains(ExpectedRes))
			{
				Report.Failure("Validation","Responce expected " + ExpectedRes + " received " + ResAPICall);
			}
				
				
        }

    }
}
