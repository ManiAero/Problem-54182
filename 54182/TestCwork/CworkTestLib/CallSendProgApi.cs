///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CworkTestLib
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CallSendProgApi recording.
    /// </summary>
    [TestModule("2727bce9-9e0a-4a2d-b794-b9135cbe0d9d", ModuleType.Recording, 1)]
    public partial class CallSendProgApi : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CworkTestLibRepository repository.
        /// </summary>
        public static CworkTestLibRepository repo = CworkTestLibRepository.Instance;

        static CallSendProgApi instance = new CallSendProgApi();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CallSendProgApi()
        {
            CncId = "0";
            DocumentName = "";
            DocExtension = "";
            SourceFolder = "";
            User = "";
            psw = "";
            ExpectedRes = "";
            DestinationFolder = "";
            DestinationFolderMode = "";
            Override = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CallSendProgApi Instance
        {
            get { return instance; }
        }

#region Variables

        string _CncId;

        /// <summary>
        /// Gets or sets the value of variable CncId.
        /// </summary>
        [TestVariable("8b81791d-df36-4da3-99f0-85edecd4cd27")]
        public string CncId
        {
            get { return _CncId; }
            set { _CncId = value; }
        }

        string _DocumentName;

        /// <summary>
        /// Gets or sets the value of variable DocumentName.
        /// </summary>
        [TestVariable("ed07100a-87cd-468b-8262-627cbec9bd2d")]
        public string DocumentName
        {
            get { return _DocumentName; }
            set { _DocumentName = value; }
        }

        string _DocExtension;

        /// <summary>
        /// Gets or sets the value of variable DocExtension.
        /// </summary>
        [TestVariable("625bb0c0-bdb2-49fc-9cf4-41decea64adf")]
        public string DocExtension
        {
            get { return _DocExtension; }
            set { _DocExtension = value; }
        }

        string _SourceFolder;

        /// <summary>
        /// Gets or sets the value of variable SourceFolder.
        /// </summary>
        [TestVariable("80e99091-7815-4613-abcd-3b35c686162f")]
        public string SourceFolder
        {
            get { return _SourceFolder; }
            set { _SourceFolder = value; }
        }

        string _psw;

        /// <summary>
        /// Gets or sets the value of variable psw.
        /// </summary>
        [TestVariable("b16a234b-b672-43b9-80c3-8ab0196a4bb0")]
        public string psw
        {
            get { return _psw; }
            set { _psw = value; }
        }

        string _ExpectedRes;

        /// <summary>
        /// Gets or sets the value of variable ExpectedRes.
        /// </summary>
        [TestVariable("0bc70af6-6e5d-4bc8-9f09-abfed5d5e52f")]
        public string ExpectedRes
        {
            get { return _ExpectedRes; }
            set { _ExpectedRes = value; }
        }

        string _DestinationFolder;

        /// <summary>
        /// Gets or sets the value of variable DestinationFolder.
        /// </summary>
        [TestVariable("9aefc13c-9676-44b4-9c70-e5ad3a7b2bca")]
        public string DestinationFolder
        {
            get { return _DestinationFolder; }
            set { _DestinationFolder = value; }
        }

        string _DestinationFolderMode;

        /// <summary>
        /// Gets or sets the value of variable DestinationFolderMode.
        /// </summary>
        [TestVariable("57448ba8-c2fa-44b9-bf1b-50234c222217")]
        public string DestinationFolderMode
        {
            get { return _DestinationFolderMode; }
            set { _DestinationFolderMode = value; }
        }

        string _Override;

        /// <summary>
        /// Gets or sets the value of variable Override.
        /// </summary>
        [TestVariable("26d62aab-499d-407a-a729-db0f5e9693c8")]
        public string Override
        {
            get { return _Override; }
            set { _Override = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable User.
        /// </summary>
        [TestVariable("52cd4b6e-d865-49af-b91c-fd4940cca98f")]
        public string User
        {
            get { return repo.User; }
            set { repo.User = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            CallSendProgApiCode(ValueConverter.ArgumentFromString<int>("CncId", CncId), DocumentName, DocExtension, SourceFolder, User, psw, ExpectedRes, DestinationFolder, DestinationFolderMode, ValueConverter.ArgumentFromString<bool>("Override", Override));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
