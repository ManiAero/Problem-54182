///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

using System.Data;
using System.Data.OleDb;

namespace CworkTestLib
{
    public partial class InsertStatesInAcessDb
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
         /// <summary>
        /// This method insert a state in cwork cworkstatestable.
        /// </summary>            
        private void UpdateCworkstatestable(Int32 cnc, Int32 state, System.DateTime startEndDate,String cncName, String stateName)
        {
			OleDbConnection conn = new OleDbConnection(@"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\CworkTestAuto\Database\dnc.mdb");
            try {
            	conn.Open();
            	// delete entry in table
			    string comandDelete = "DELETE FROM cworkstatestable WHERE stastationfield = '" + cncName + "'" ;
			    OleDbCommand cmd = new OleDbCommand(comandDelete, conn);
			    cmd.ExecuteNonQuery();             	
            	
				OleDbCommand  maCommande = conn.CreateCommand();
				maCommande.CommandType = CommandType.Text;
				maCommande.CommandText = "INSERT INTO cworkstatestable" +
					"(stastationhandlefield,stastatehandlefield,statoptimefield,stastationfield,stastatefield,stadatefield)" +
					"VALUES(@cnc,@state,@startDate,@cncName,@stateName,@dateField)";
				// stastationhandlefield parameter
				OleDbParameter paramCnc = new OleDbParameter();
				paramCnc.ParameterName = "@cnc";
				paramCnc.DbType = DbType.Int32;
				paramCnc.Direction = ParameterDirection.Input;
				paramCnc.Value = cnc;
				maCommande.Parameters.Add(paramCnc);

				// stastatehandlefield parameter
				OleDbParameter paramState = new OleDbParameter();
				paramState.ParameterName = "@state";
				paramState.DbType = DbType.Int32;
				paramState.Direction = ParameterDirection.Input;
				paramState.Value = state;
				maCommande.Parameters.Add(paramState);				

				// statoptimefield parameter
				// On tronque les ms car acces ne les supporte pas.
				System.DateTime MaDateStartDateTronque = new System.DateTime(startEndDate.Year, startEndDate.Month,
				                                                    startEndDate.Day, startEndDate.Hour,
				                                                    startEndDate.Minute, startEndDate.Second);
				OleDbParameter paramStartDate = new OleDbParameter();
				paramStartDate.ParameterName = "@startDate";
				paramStartDate.DbType = DbType.DateTime;
				paramStartDate.Direction = ParameterDirection.Input;
				paramStartDate.Value = MaDateStartDateTronque;
				maCommande.Parameters.Add(paramStartDate);				

				
				// stastationfield parameter
				OleDbParameter paramcncName = new OleDbParameter();
				paramcncName.ParameterName = "@cncName";
				paramcncName.DbType = DbType.AnsiString;
				paramcncName.Direction = ParameterDirection.Input;
				paramcncName.Value = cncName;
				maCommande.Parameters.Add(paramcncName);					
				
				// stastatefield parameter
				OleDbParameter paramstateName = new OleDbParameter();
				paramstateName.ParameterName = "@stateName";
				paramstateName.DbType = DbType.AnsiString;
				paramstateName.Direction = ParameterDirection.Input;
				paramstateName.Value = stateName;
				maCommande.Parameters.Add(paramstateName);				
				
				// stadatefield parameter
				// On tronque les ms car acces ne les supporte pas.
				System.DateTime MaDateparamdateFieldTronque = new System.DateTime(startEndDate.Year, startEndDate.Month,
				                                                    startEndDate.Day, startEndDate.Hour,
				                                                    startEndDate.Minute,0);
				OleDbParameter paramdateField = new OleDbParameter();
				paramdateField.ParameterName = "@dateField";
				paramdateField.DbType = DbType.DateTime;
				paramdateField.Direction = ParameterDirection.Input;
				paramdateField.Value = MaDateparamdateFieldTronque;
				maCommande.Parameters.Add(paramdateField);	
				
				maCommande.ExecuteNonQuery();				
			
            } catch (Exception e) {
 				throw new Ranorex.ValidationException("Tops could not be created ", e);             } 
            finally {
            	conn.Close();
            }
        }
        
        /// <summary>
        /// This method insert a state in cwork topstable.
        /// </summary>            
        private void InsertTopInDb(Int32 cnc, Int32 state, System.DateTime startDate, System.DateTime EndDate )
        {
            // TODO: Replace the following line with your code implementation.
            //throw new NotImplementedException();
            OleDbConnection conn = new OleDbConnection(@"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\CworkTestAuto\Database\dnc.mdb");
            try {
            	conn.Open();
 				OleDbCommand  maCommande = conn.CreateCommand();
				maCommande.CommandType = CommandType.Text;
				maCommande.CommandText = "INSERT INTO cworktopstable(topcnchandlefield,topstatehandlefield,topstartdatefield,topenddatefield,topdurationfield)" +
							"VALUES(@cnc,@state,@startDate,@endDate,@duration)";
				
				// CNC parameter
				OleDbParameter paramCnc = new OleDbParameter();
				paramCnc.ParameterName = "@cnc";
				paramCnc.DbType = DbType.Int32;
				paramCnc.Direction = ParameterDirection.Input;
				paramCnc.Value = cnc;
				maCommande.Parameters.Add(paramCnc);

				// state parameter
				OleDbParameter paramState = new OleDbParameter();
				paramState.ParameterName = "@state";
				paramState.DbType = DbType.Int32;
				paramState.Direction = ParameterDirection.Input;
				paramState.Value = state;
				maCommande.Parameters.Add(paramState);				

				// startDate parameter
				// On tronque les ms car acces ne les supporte pas.
				System.DateTime MaDateStartDateTronque = new System.DateTime(startDate.Year, startDate.Month,
				                                                    startDate.Day, startDate.Hour,
				                                                    startDate.Minute, startDate.Second);
				OleDbParameter paramStartDate = new OleDbParameter();
				paramStartDate.ParameterName = "@startDate";
				paramStartDate.DbType = DbType.DateTime;
				paramStartDate.Direction = ParameterDirection.Input;
				paramStartDate.Value = MaDateStartDateTronque;
				maCommande.Parameters.Add(paramStartDate);
				
				// endDate parameter
				// On tronque les ms car acces ne les supporte pas.
				System.DateTime MaDateEndDateTronque = new System.DateTime(EndDate.Year, EndDate.Month,
				                                                    EndDate.Day, EndDate.Hour,
				                                                    EndDate.Minute, EndDate.Second);
				OleDbParameter paramEndDate = new OleDbParameter();
				paramEndDate.ParameterName = "@endDate";
				paramEndDate.DbType = DbType.DateTime;
				paramEndDate.Direction = ParameterDirection.Input;
				paramEndDate.Value = MaDateEndDateTronque;
				maCommande.Parameters.Add(paramEndDate);	

				// duration parameter
				OleDbParameter paramDuration = new OleDbParameter();
				paramDuration.ParameterName = "@duration";
				paramDuration.DbType = DbType.Int32;
				paramDuration.Direction = ParameterDirection.Input;
				paramDuration.Value = (MaDateEndDateTronque-MaDateStartDateTronque).TotalSeconds;
				maCommande.Parameters.Add(paramDuration);

				maCommande.ExecuteNonQuery();
				
            } catch (Exception e) {
 				throw new Ranorex.ValidationException("Tops could not be created ", e);             } 
            finally {
            	conn.Close();
            }
        }

        /// <summary>
        /// This method delete cworkstatestable existing reccords
        /// </summary>        
        private void ClearStatesTablesTableContents(Int32 cnc)
        {
 			OleDbConnection conn = new OleDbConnection(@"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\CworkTestAuto\Database\dnc.mdb");
            try {
            	conn.Open();
            	// delete entry in table
  				OleDbCommand  maCommande = conn.CreateCommand();
				maCommande.CommandType = CommandType.Text;
				maCommande.CommandText = "DELETE FROM cworkstatestable WHERE stastationhandlefield = @cnc";
				
				// CNC parameter
				OleDbParameter paramCnc = new OleDbParameter();
				paramCnc.ParameterName = "@cnc";
				paramCnc.DbType = DbType.Int32;
				paramCnc.Direction = ParameterDirection.Input;
				paramCnc.Value = cnc;
				maCommande.Parameters.Add(paramCnc);           	
            	
            	maCommande.ExecuteNonQuery();

            } catch (Exception e) {
 				throw new Ranorex.ValidationException("StatesTables could not be Deleted ", e);             } 
            finally {
            	conn.Close();
            }	
        }
    
        /// <summary>
        /// This method delete cworktopstable existing reccords
        /// </summary>        
        private void ClearTopsTableContents(Int32 cnc)
        {
 			OleDbConnection conn = new OleDbConnection(@"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\CworkTestAuto\Database\dnc.mdb");
            try {
 				conn.Open();
            	// delete entry in table
  				OleDbCommand  maCommande = conn.CreateCommand();
				maCommande.CommandType = CommandType.Text;
				maCommande.CommandText = "DELETE FROM cworktopstable WHERE topcnchandlefield = @cnc";
				
				// CNC parameter
				OleDbParameter paramCnc = new OleDbParameter();
				paramCnc.ParameterName = "@cnc";
				paramCnc.DbType = DbType.Int32;
				paramCnc.Direction = ParameterDirection.Input;
				paramCnc.Value = cnc;
				maCommande.Parameters.Add(paramCnc);           	
            	
            	maCommande.ExecuteNonQuery();

            } catch (Exception e) {
 				throw new Ranorex.ValidationException("Tops could not be StatesTables ", e);             } 
            finally {
            	conn.Close();
            }	
        }    
        
        /// <summary>
        /// This method insert a set of state in cworktopstable for tests préparation.
        /// </summary>        
        public void InsertSatesInAccessDb()
        {
        	ClearStatesTablesTableContents(1);
        	ClearTopsTableContents(1);
        	System.DateTime MaDateNow=System.DateTime.Now;
        	System.DateTime MaDateYesterday = System.DateTime.Today.AddDays(-1);
        	System.DateTime MaDateStartLoop = MaDateYesterday;
  			System.DateTime MaDateLast = MaDateYesterday;
			// Creation des état du jours precedant tout les un quart d'heure  			
        	for (int i = 0; i < 23; i++) {
	    		InsertTopInDb(1, 0, MaDateStartLoop.AddMinutes(60*i), MaDateStartLoop.AddMinutes(15).AddMinutes(60*i) );
	         	InsertTopInDb(1, 1, MaDateStartLoop.AddMinutes(15).AddMinutes(60*i), MaDateStartLoop.AddMinutes(30).AddMinutes(60*i));
	        	InsertTopInDb(1, 2, MaDateStartLoop.AddMinutes(30).AddMinutes(60*i), MaDateStartLoop.AddMinutes(45).AddMinutes(60*i));
	        	InsertTopInDb(1, 3, MaDateStartLoop.AddMinutes(45).AddMinutes(60*i), MaDateStartLoop.AddMinutes(60).AddMinutes(60*i));
				MaDateLast = MaDateStartLoop.AddMinutes(60).AddMinutes(60*i);	        	
        	}
			// création des deux derniers état
			// l état courant dure depuis une heure
			// l état precedent commence hier 23h.			
//  			InsertTopInDb(1, 4, MaDateLast, MaDateNow.AddMinutes(-60) );
//  			InsertTopInDb(1, 0, MaDateNow.AddMinutes(-60), MaDateNow.AddMinutes(-60) );
//  			UpdateCworkstatestable(1, 0, MaDateNow.AddMinutes(-60),"cnc_1","Production");
  			InsertTopInDb(1, 4, MaDateLast, System.DateTime.Today );
  			InsertTopInDb(1, 0, System.DateTime.Today, System.DateTime.Today );
  			UpdateCworkstatestable(1, 0, System.DateTime.Today,"cnc_1","Production");
        }

    }
}
