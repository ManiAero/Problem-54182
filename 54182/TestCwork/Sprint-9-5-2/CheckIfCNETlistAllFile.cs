///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sprint9_5_2
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CheckIfCNETlistAllFile recording.
    /// </summary>
    [TestModule("dbffd4d7-078f-426a-88c7-dacd11e76768", ModuleType.Recording, 1)]
    public partial class CheckIfCNETlistAllFile : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TestFix9_5_2Repository repository.
        /// </summary>
        public static TestFix9_5_2Repository repo = TestFix9_5_2Repository.Instance;

        static CheckIfCNETlistAllFile instance = new CheckIfCNETlistAllFile();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CheckIfCNETlistAllFile()
        {
            PrgCount = "15";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CheckIfCNETlistAllFile Instance
        {
            get { return instance; }
        }

#region Variables

        string _PrgCount;

        /// <summary>
        /// Gets or sets the value of variable PrgCount.
        /// </summary>
        [TestVariable("85dd1909-a50a-46c1-aea7-f14e7a0ad79d")]
        public string PrgCount
        {
            get { return _PrgCount; }
            set { _PrgCount = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application 'C:\\CworkTestAuto\\CNET\\CNetDNC.exe' in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication("C:\\CworkTestAuto\\CNET\\CNetDNC.exe", "", "C:\\CworkTestAuto\\CNET", false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(1));
            Delay.Duration(10000, false);
            
            CworkTestLib.UserCodeCollection.DisableDelphiPlugin();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Maximize() on item 'CNetForm'.", repo.CNetForm.SelfInfo, new RecordItemIndex(3));
            repo.CNetForm.Self.Maximize();
            Delay.Milliseconds(0);
            
            CworkTestLib.UserCodeCollection.EnableDelphiPlugin();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CNetDNC.Charger' at 93;26.", repo.CNetDNC.ChargerInfo, new RecordItemIndex(5));
            repo.CNetDNC.Charger.Click("93;26");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'CNetDNC.ImportFAO' at 25;10.", repo.CNetDNC.ImportFAOInfo, new RecordItemIndex(6));
            repo.CNetDNC.ImportFAO.DoubleClick("25;10");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(7));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='ImportFAO') on item 'CNetDNC.ImportFAO'.", repo.CNetDNC.ImportFAOInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.CNetDNC.ImportFAOInfo, "Text", "ImportFAO");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Count=$PrgCount) on item 'CNetDNC.ImportFAO'.", repo.CNetDNC.ImportFAOInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.CNetDNC.ImportFAOInfo, "Count", PrgCount);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CNetDNC.MenuPrincipal' at 80;27.", repo.CNetDNC.MenuPrincipalInfo, new RecordItemIndex(11));
            repo.CNetDNC.MenuPrincipal.Click("80;27");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CNetDNC.TextBye' at 80;27.", repo.CNetDNC.TextByeInfo, new RecordItemIndex(12));
            repo.CNetDNC.TextBye.Click("80;27");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
