///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sprint9_6
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FidMissingValueError recording.
    /// </summary>
    [TestModule("c88f9969-841f-413f-aaf1-779d3f34506d", ModuleType.Recording, 1)]
    public partial class FidMissingValueError : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Sprint_9_6Repository repository.
        /// </summary>
        public static Sprint_9_6Repository repo = Sprint_9_6Repository.Instance;

        static FidMissingValueError instance = new FidMissingValueError();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FidMissingValueError()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FidMissingValueError Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(0));
            Delay.Duration(30000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=1266,Height=22}) on item 'CworkMainForm.HistoryView1'.", repo.CworkMainForm.HistoryView1Info, new RecordItemIndex(1));
            Validate.ContainsImage(repo.CworkMainForm.HistoryView1Info, HistoryView1_Screenshot1, HistoryView1_Screenshot1_Options);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage HistoryView1_Screenshot1
        { get { return repo.CworkMainForm.HistoryView1Info.GetScreenshot1(new Rectangle(0, 0, 1266, 22)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions HistoryView1_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
