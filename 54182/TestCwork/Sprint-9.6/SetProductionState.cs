///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sprint9_6
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetProductionState recording.
    /// </summary>
    [TestModule("c4a2e2b3-80e9-488e-ab5d-eb837f37f259", ModuleType.Recording, 1)]
    public partial class SetProductionState : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Sprint_9_6Repository repository.
        /// </summary>
        public static Sprint_9_6Repository repo = Sprint_9_6Repository.Instance;

        static SetProductionState instance = new SetProductionState();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetProductionState()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetProductionState Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'None.Administrateur' at 32;9.", repo.None.AdministrateurInfo, new RecordItemIndex(0));
            repo.None.Administrateur.Click("32;9");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OuvertureDeSessionCWork.ElementBOk' at 15;24.", repo.OuvertureDeSessionCWork.ElementBOkInfo, new RecordItemIndex(1));
            repo.OuvertureDeSessionCWork.ElementBOk.Click("15;24");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'CworkMainForm.StationsTiles' at 187;107.", repo.CworkMainForm.StationsTilesInfo, new RecordItemIndex(2));
            repo.CworkMainForm.StationsTiles.Click(System.Windows.Forms.MouseButtons.Right, "187;107");
            Delay.Milliseconds(1670);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'CworkMainForm.Cnc1DO0PercentDNCPROD' at 4;4.", repo.CworkMainForm.Cnc1DO0PercentDNCPRODInfo, new RecordItemIndex(3));
            repo.CworkMainForm.Cnc1DO0PercentDNCPROD.Click(System.Windows.Forms.MouseButtons.Right, new Location(Cnc1DO0PercentDNCPROD_Screenshot1, "4;4", Cnc1DO0PercentDNCPROD_Screenshot1_Options));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Cwork.Contexte.MenuItem2' at 4;4.", repo.Cwork.Contexte.MenuItem2Info, new RecordItemIndex(4));
            repo.Cwork.Contexte.MenuItem2.Click(new Location(MenuItem2_Screenshot1, "4;4", MenuItem2_Screenshot1_Options));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CworkMainForm.Button0' at 32;25.", repo.CworkMainForm.Button0Info, new RecordItemIndex(5));
            repo.CworkMainForm.Button0.Click("32;25");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(6));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CworkMainForm.BtClose' at 57;25.", repo.CworkMainForm.BtCloseInfo, new RecordItemIndex(7));
            repo.CworkMainForm.BtClose.Click("57;25");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage Cnc1DO0PercentDNCPROD_Screenshot1
        { get { return repo.CworkMainForm.Cnc1DO0PercentDNCPRODInfo.GetScreenshot1(new Rectangle(74, 85, 8, 8)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions Cnc1DO0PercentDNCPROD_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage MenuItem2_Screenshot1
        { get { return repo.Cwork.Contexte.MenuItem2Info.GetScreenshot1(new Rectangle(122, 9, 8, 8)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions MenuItem2_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
