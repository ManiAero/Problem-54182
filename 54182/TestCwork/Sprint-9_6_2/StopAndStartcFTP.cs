///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sprint_9_6_2
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The StopAndStartcFTP recording.
    /// </summary>
    [TestModule("d3967fe6-fe65-402a-a992-3e8052ce9079", ModuleType.Recording, 1)]
    public partial class StopAndStartCftp : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Sprint_9_6_2Repository repository.
        /// </summary>
        public static Sprint_9_6_2Repository repo = Sprint_9_6_2Repository.Instance;

        static StopAndStartCftp instance = new StopAndStartCftp();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public StopAndStartCftp()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static StopAndStartCftp Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CworkMainForm2.CWork202195.MenuItemOutils' at 23;10.", repo.CworkMainForm2.CWork202195.MenuItemOutilsInfo, new RecordItemIndex(0));
            //repo.CworkMainForm2.CWork202195.MenuItemOutils.Click("23;10");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Cwork2024983DEV.MenuItemOutils' at Center.", repo.Cwork2024983DEV.MenuItemOutilsInfo, new RecordItemIndex(1));
            repo.Cwork2024983DEV.MenuItemOutils.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CworkMainForm2.Cwork.MenuItem12' at 61;15.", repo.CworkMainForm2.Cwork.MenuItem12Info, new RecordItemIndex(2));
            repo.CworkMainForm2.Cwork.MenuItem12.Click("61;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'GestionDesServeursEtMoteurs.ActionsSurMoteurs' at 56;10.", repo.GestionDesServeursEtMoteurs.ActionsSurMoteursInfo, new RecordItemIndex(3));
            repo.GestionDesServeursEtMoteurs.ActionsSurMoteurs.Click("56;10");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'GestionDesServeursEtMoteurs.BStopCFtp' at 22;23.", repo.GestionDesServeursEtMoteurs.BStopCFtpInfo, new RecordItemIndex(4));
            repo.GestionDesServeursEtMoteurs.BStopCFtp.Click("22;23");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(5));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'GestionDesServeursEtMoteurs.BStartCFtp' at 20;22.", repo.GestionDesServeursEtMoteurs.BStartCFtpInfo, new RecordItemIndex(6));
            repo.GestionDesServeursEtMoteurs.BStartCFtp.Click("20;22");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'GestionDesServeursEtMoteurs.BStartCFtp'", repo.GestionDesServeursEtMoteurs.BStartCFtpInfo, new RecordItemIndex(7));
            //repo.GestionDesServeursEtMoteurs.BStartCFtpInfo.WaitForAttributeEqual(30000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'GestionDesServeursEtMoteurs.Valider' at 53;15.", repo.GestionDesServeursEtMoteurs.ValiderInfo, new RecordItemIndex(8));
            repo.GestionDesServeursEtMoteurs.Valider.Click("53;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(9));
            Delay.Duration(30000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
