///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sprint_9_6_3
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ConfigureMultilineExpression recording.
    /// </summary>
    [TestModule("105017f3-2e37-4c58-8eca-6b923ae93621", ModuleType.Recording, 1)]
    public partial class ConfigureMultilineExpression : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Sprint_9_6_3Repository repository.
        /// </summary>
        public static Sprint_9_6_3Repository repo = Sprint_9_6_3Repository.Instance;

        static ConfigureMultilineExpression instance = new ConfigureMultilineExpression();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ConfigureMultilineExpression()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ConfigureMultilineExpression Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CworkMainForm.CWork202195.Cnc1' at 43;18.", repo.CworkMainForm.CWork202195.Cnc1Info, new RecordItemIndex(0));
            repo.CworkMainForm.CWork202195.Cnc1.Click("43;18");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CWork2022962DEV.BProperty' at Center.", repo.CWork2022962DEV.BPropertyInfo, new RecordItemIndex(1));
            repo.CWork2022962DEV.BProperty.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ChoixDuneConfiguration.ListItemDefaultRS232' at 22;4.", repo.ChoixDuneConfiguration.ListItemDefaultRS232Info, new RecordItemIndex(2));
            repo.ChoixDuneConfiguration.ListItemDefaultRS232.Click("22;4");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ChoixDuneConfiguration.ElementBOk' at 40;16.", repo.ChoixDuneConfiguration.ElementBOkInfo, new RecordItemIndex(3));
            repo.ChoixDuneConfiguration.ElementBOk.Click("40;16");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProprietesPourCnc1.Commandes' at 35;6.", repo.ProprietesPourCnc1.CommandesInfo, new RecordItemIndex(4));
            repo.ProprietesPourCnc1.Commandes.Click("35;6");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProprietesPourCnc1.TabSheet2.ActiverLesCommandes' at 5;7.", repo.ProprietesPourCnc1.TabSheet2.ActiverLesCommandesInfo, new RecordItemIndex(5));
            repo.ProprietesPourCnc1.TabSheet2.ActiverLesCommandes.Click("5;7");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProprietesPourCnc1.TabSheet2.Panne' at 28;10.", repo.ProprietesPourCnc1.TabSheet2.PanneInfo, new RecordItemIndex(6));
            repo.ProprietesPourCnc1.TabSheet2.Panne.Click("28;10");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProprietesPourCnc1.MemVarPascal' at 22;22.", repo.ProprietesPourCnc1.MemVarPascalInfo, new RecordItemIndex(7));
            repo.ProprietesPourCnc1.MemVarPascal.Click("22;22");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '({{@HEID|BOOL|1&CONNECTED@}=FALSE)' with focus on 'ProprietesPourCnc1.MemVarPascal'.", repo.ProprietesPourCnc1.MemVarPascalInfo, new RecordItemIndex(8));
            repo.ProprietesPourCnc1.MemVarPascal.PressKeys("({{@HEID|BOOL|1&CONNECTED@}=FALSE)");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ProprietesPourCnc1.MemVarPascal'.", repo.ProprietesPourCnc1.MemVarPascalInfo, new RecordItemIndex(9));
            repo.ProprietesPourCnc1.MemVarPascal.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'AND{Return}' with focus on 'ProprietesPourCnc1.MemVarPascal'.", repo.ProprietesPourCnc1.MemVarPascalInfo, new RecordItemIndex(10));
            repo.ProprietesPourCnc1.MemVarPascal.PressKeys("AND{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '({{@HEID|BOOL|1&CONNECTED@}=FALSE)' with focus on 'ProprietesPourCnc1.MemVarPascal'.", repo.ProprietesPourCnc1.MemVarPascalInfo, new RecordItemIndex(11));
            repo.ProprietesPourCnc1.MemVarPascal.PressKeys("({{@HEID|BOOL|1&CONNECTED@}=FALSE)");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProprietesPourCnc1.TabSheet2.BCommandValid' at 18;16.", repo.ProprietesPourCnc1.TabSheet2.BCommandValidInfo, new RecordItemIndex(12));
            repo.ProprietesPourCnc1.TabSheet2.BCommandValid.Click("18;16");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProprietesPourCnc1.ButtonAppliquer' at 55;9.", repo.ProprietesPourCnc1.ButtonAppliquerInfo, new RecordItemIndex(13));
            repo.ProprietesPourCnc1.ButtonAppliquer.Click("55;9");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
