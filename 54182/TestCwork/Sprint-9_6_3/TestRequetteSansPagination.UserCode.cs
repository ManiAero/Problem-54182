///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;
using CworkTestLib;

namespace Sprint_9_6_3
{
    public partial class TestRequetteSansPagination
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        public void TestNoPageBetween3Before0After0(string EndPoint)
        {
        	// date d'aujourd'hui
        	// 3 tops de 0h03mn a Oh05mn
        	System.DateTime MaDateStartToday =System.DateTime.Today;
        	System.DateTime StartQuery = MaDateStartToday.AddMinutes(3).ToUniversalTime();
			System.DateTime EndQuery = MaDateStartToday.AddMinutes(6).ToUniversalTime();
			
			//Valleur de controle
			string FirstTop_topstartdatefieldOkay = MaDateStartToday.AddMinutes(3).ToString("o");
			string LastTop_topstartdatefieldOkay = MaDateStartToday.AddMinutes(5).ToString("o");
			string FirstTop_Comment = "top3";
			string LastTop_Comment = "top5";
			string Has_more_Top = "False";
			int NumberOfTops = 3;
			
        	
        	string startdate = ((DateTimeOffset)StartQuery).ToUnixTimeSeconds().ToString(); //troisieme top
        	string endDate = ((DateTimeOffset)EndQuery).ToUnixTimeSeconds().ToString();
	    	string NbTopBefore = "0";
	    	string NbTopAfter = "0";
	    	string station = "1";
	    	string url = " http://localhost:4445/CAPI/REST/"+EndPoint+"?station="+station +
	    		"&startdate="+startdate+ 
	    		"&enddate="+endDate+
	    		"&NbTopBefore="+NbTopBefore+
	    		"&NbTopAfter="+NbTopAfter;
	    	
	    	string ResAPICall = RestAPIMethods.SendGet(url);
	    	
	    	
	    	
	    	Report.Log(ReportLevel.Info, "Query  "+ url);
	    	
	    	if (RestAPIMethods.VerifyTopsReiceived(ResAPICall, 
	    	                    FirstTop_topstartdatefieldOkay,
	    	                    LastTop_topstartdatefieldOkay,
	    	                    FirstTop_Comment,
	    	                    LastTop_Comment,
	    	                    Has_more_Top,
	    	                    NumberOfTops))
	    	{
	    		Report.Success("Validation", "TestNoPageNbeforeNoAfter Okay");
	    	}
	    	                
        }

        public void TestNoPageBetween3Before1After0(string EndPoint)
        {
        	// date d'aujourd'hui
        	// 3 tops de 0h03mn a Oh05mn
        	System.DateTime MaDateStartToday =System.DateTime.Today;
        	System.DateTime StartQuery = MaDateStartToday.AddMinutes(3).ToUniversalTime();
			System.DateTime EndQuery = MaDateStartToday.AddMinutes(6).ToUniversalTime();
			
			//Valleur de controle
			string FirstTop_topstartdatefieldOkay = MaDateStartToday.AddMinutes(2).ToString("o");
			string LastTop_topstartdatefieldOkay = MaDateStartToday.AddMinutes(5).ToString("o");
			string FirstTop_Comment = "top2";
			string LastTop_Comment = "top5";
			string Has_more_Top = "False";
			int NumberOfTops = 4;
			       	
        	string startdate = ((DateTimeOffset)StartQuery).ToUnixTimeSeconds().ToString(); //troisieme top
        	string endDate = ((DateTimeOffset)EndQuery).ToUnixTimeSeconds().ToString();
	    	string NbTopBefore = "1";
	    	string NbTopAfter = "0";
	    	string station = "1";
	    	string url = " http://localhost:4445/CAPI/REST/"+EndPoint+"?station="+station +
	    		"&startdate="+startdate+ 
	    		"&enddate="+endDate+
	    		"&NbTopBefore="+NbTopBefore+
	    		"&NbTopAfter="+NbTopAfter;
	    	
	    	string ResAPICall = RestAPIMethods.SendGet(url);
    	
	    	Report.Log(ReportLevel.Info, "Query  "+ url);
	    	
	    	if (RestAPIMethods.VerifyTopsReiceived(ResAPICall, 
	    	                    FirstTop_topstartdatefieldOkay,
	    	                    LastTop_topstartdatefieldOkay,
	    	                    FirstTop_Comment,
	    	                    LastTop_Comment,
	    	                    Has_more_Top,
	    	                    NumberOfTops))
	    	{
	    		Report.Success("Validation", "TestNoPage1beforeNoAfter Okay");
	    	}	                        	
	    	
        }

        public void TestNoPageBetwen3Before1After2(string EndPoint)
        {
        	// date d'aujourd'hui
        	// 3 tops de 0h03mn a Oh05mn
        	System.DateTime MaDateStartToday =System.DateTime.Today;
        	System.DateTime StartQuery = MaDateStartToday.AddMinutes(3).ToUniversalTime();
			System.DateTime EndQuery = MaDateStartToday.AddMinutes(6).ToUniversalTime();
			
			//Valleur de controle
			string FirstTop_topstartdatefieldOkay = MaDateStartToday.AddMinutes(2).ToString("o");
			string LastTop_topstartdatefieldOkay = MaDateStartToday.AddMinutes(7).ToString("o");
			string FirstTop_Comment = "top2";
			string LastTop_Comment = "top7";
			string Has_more_Top = "False";
			int NumberOfTops = 6;
			
        	
        	string startdate = ((DateTimeOffset)StartQuery).ToUnixTimeSeconds().ToString(); //troisieme top
        	string endDate = ((DateTimeOffset)EndQuery).ToUnixTimeSeconds().ToString();
	    	string NbTopBefore = "1";
	    	string NbTopAfter = "2";
	    	string station = "1";
	    	string url = " http://localhost:4445/CAPI/REST/"+EndPoint+"?station="+station +
	    		"&startdate="+startdate+ 
	    		"&enddate="+endDate+
	    		"&NbTopBefore="+NbTopBefore+
	    		"&NbTopAfter="+NbTopAfter;
	    	
	    	string ResAPICall = RestAPIMethods.SendGet(url);
	    	
	    	
	    	
	    	Report.Log(ReportLevel.Info, "Query  "+ url);
	    	
	    	if (RestAPIMethods.VerifyTopsReiceived(ResAPICall, 
	    	                    FirstTop_topstartdatefieldOkay,
	    	                    LastTop_topstartdatefieldOkay,
	    	                    FirstTop_Comment,
	    	                    LastTop_Comment,
	    	                    Has_more_Top,
	    	                    NumberOfTops))
	    	{
	    		Report.Success("Validation", "TestNoPage1before2After Okay");
	    	}
	    	     
        }
       
    }
}
