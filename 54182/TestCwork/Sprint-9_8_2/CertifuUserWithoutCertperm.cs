///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sprint_9_8_2
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CertifuUserWithoutCertperm recording.
    /// </summary>
    [TestModule("f7943e45-9f27-40fc-b960-f1cbbe7493b2", ModuleType.Recording, 1)]
    public partial class CertifuUserWithoutCertPerm : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Sprint_9_8_2Repository repository.
        /// </summary>
        public static Sprint_9_8_2Repository repo = Sprint_9_8_2Repository.Instance;

        static CertifuUserWithoutCertPerm instance = new CertifuUserWithoutCertPerm();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CertifuUserWithoutCertPerm()
        {
            varDocId = "0";
            varCncID = "1";
            varPrgRef = "png1";
            varUser = "user1";
            varPsw = "";
            varVersion = "254";
            varNewStatus = "EDITÉ";
            varExpectedRes = "";
            varUserAdmin = "user1";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CertifuUserWithoutCertPerm Instance
        {
            get { return instance; }
        }

#region Variables

        string _varDocId;

        /// <summary>
        /// Gets or sets the value of variable varDocId.
        /// </summary>
        [TestVariable("09b2b6aa-feeb-4cb7-bc7a-ba3db986d335")]
        public string varDocId
        {
            get { return _varDocId; }
            set { _varDocId = value; }
        }

        string _varCncID;

        /// <summary>
        /// Gets or sets the value of variable varCncID.
        /// </summary>
        [TestVariable("0be66eee-e156-4e29-8f30-947d329d6aad")]
        public string varCncID
        {
            get { return _varCncID; }
            set { _varCncID = value; }
        }

        string _varPrgRef;

        /// <summary>
        /// Gets or sets the value of variable varPrgRef.
        /// </summary>
        [TestVariable("94d8d70d-a8ed-475e-9e44-a614975af7a7")]
        public string varPrgRef
        {
            get { return _varPrgRef; }
            set { _varPrgRef = value; }
        }

        string _varUser;

        /// <summary>
        /// Gets or sets the value of variable varUser.
        /// </summary>
        [TestVariable("47d2da08-4a43-4ded-a90d-3dc3e67747c4")]
        public string varUser
        {
            get { return _varUser; }
            set { _varUser = value; }
        }

        string _varPsw;

        /// <summary>
        /// Gets or sets the value of variable varPsw.
        /// </summary>
        [TestVariable("90b987ac-d019-4c0d-ae46-625c45b84ad4")]
        public string varPsw
        {
            get { return _varPsw; }
            set { _varPsw = value; }
        }

        string _varVersion;

        /// <summary>
        /// Gets or sets the value of variable varVersion.
        /// </summary>
        [TestVariable("690a0f25-c0c3-486b-8cf8-6afb75d8f750")]
        public string varVersion
        {
            get { return _varVersion; }
            set { _varVersion = value; }
        }

        string _varNewStatus;

        /// <summary>
        /// Gets or sets the value of variable varNewStatus.
        /// </summary>
        [TestVariable("6d17c31c-789e-448f-89bb-66612dbd763b")]
        public string varNewStatus
        {
            get { return _varNewStatus; }
            set { _varNewStatus = value; }
        }

        string _varExpectedRes;

        /// <summary>
        /// Gets or sets the value of variable varExpectedRes.
        /// </summary>
        [TestVariable("aa32041b-0e99-405b-bfa6-c9a9f1b6cd5c")]
        public string varExpectedRes
        {
            get { return _varExpectedRes; }
            set { _varExpectedRes = value; }
        }

        string _varUserAdmin;

        /// <summary>
        /// Gets or sets the value of variable varUserAdmin.
        /// </summary>
        [TestVariable("f3f658fa-6da7-4590-a62a-6d59fe59f03c")]
        public string varUserAdmin
        {
            get { return _varUserAdmin; }
            set { _varUserAdmin = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Get program id
            varDocId = ValueConverter.ToString(CworkTestLib.UserCodeCollectionProgramCwork.GetDocId(ValueConverter.ArgumentFromString<int>("CncId", varCncID), varPrgRef, varUserAdmin, varPsw));
            Delay.Milliseconds(0);
            
            // Get last version id
            varVersion = ValueConverter.ToString(CworkTestLib.UserCodeCollectionProgramCwork.GetlasttVer(ValueConverter.ArgumentFromString<int>("CncId", varCncID), ValueConverter.ArgumentFromString<int>("_docId", varDocId), varUserAdmin, varPsw));
            Delay.Milliseconds(0);
            
            CworkTestLib.UserCodeCollectionProgramCwork.Certify(ValueConverter.ArgumentFromString<int>("CncId", varCncID), varNewStatus, ValueConverter.ArgumentFromString<int>("DocId", varDocId), ValueConverter.ArgumentFromString<int>("FirstVersionId", varVersion), "Certified By CAP", varUser, varPsw, varExpectedRes);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
