///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sprint_9_8_2
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CertifyPrg recording.
    /// </summary>
    [TestModule("b7e2594f-c74d-497c-a770-a80695e18cc6", ModuleType.Recording, 1)]
    public partial class CertifyPrg : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Sprint_9_8_2Repository repository.
        /// </summary>
        public static Sprint_9_8_2Repository repo = Sprint_9_8_2Repository.Instance;

        static CertifyPrg instance = new CertifyPrg();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CertifyPrg()
        {
            varPrgRef = "png1";
            varCncID = "1";
            varNewStatus = "EDITÉ";
            varCertifyComment = "Certified by API";
            varUser = "user1";
            varExpectdVersionId = "2";
            varPsw = "";
            varDocId = "0";
            varInc = "0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CertifyPrg Instance
        {
            get { return instance; }
        }

#region Variables

        string _varPrgRef;

        /// <summary>
        /// Gets or sets the value of variable varPrgRef.
        /// </summary>
        [TestVariable("92296dac-96d9-47df-9e27-3de415a4f21e")]
        public string varPrgRef
        {
            get { return _varPrgRef; }
            set { _varPrgRef = value; }
        }

        string _varCncID;

        /// <summary>
        /// Gets or sets the value of variable varCncID.
        /// </summary>
        [TestVariable("3df5f5d9-5440-4730-b3e7-92c31dfb5dee")]
        public string varCncID
        {
            get { return _varCncID; }
            set { _varCncID = value; }
        }

        string _varNewStatus;

        /// <summary>
        /// Gets or sets the value of variable varNewStatus.
        /// </summary>
        [TestVariable("982e6993-1afc-4b00-8d79-73290116cf9b")]
        public string varNewStatus
        {
            get { return _varNewStatus; }
            set { _varNewStatus = value; }
        }

        string _varCertifyComment;

        /// <summary>
        /// Gets or sets the value of variable varCertifyComment.
        /// </summary>
        [TestVariable("ea4a8ae5-9ac8-40d0-a624-674b478edddb")]
        public string varCertifyComment
        {
            get { return _varCertifyComment; }
            set { _varCertifyComment = value; }
        }

        string _varUser;

        /// <summary>
        /// Gets or sets the value of variable varUser.
        /// </summary>
        [TestVariable("83f76c67-fdb0-4582-a636-52aedc797d4d")]
        public string varUser
        {
            get { return _varUser; }
            set { _varUser = value; }
        }

        string _varExpectdVersionId;

        /// <summary>
        /// Gets or sets the value of variable varExpectdVersionId.
        /// </summary>
        [TestVariable("4394be4e-3abb-4a9f-8fcf-93774162b294")]
        public string varExpectdVersionId
        {
            get { return _varExpectdVersionId; }
            set { _varExpectdVersionId = value; }
        }

        string _varPsw;

        /// <summary>
        /// Gets or sets the value of variable varPsw.
        /// </summary>
        [TestVariable("5c92f6c5-2f31-4882-b145-9732e2d9d385")]
        public string varPsw
        {
            get { return _varPsw; }
            set { _varPsw = value; }
        }

        string _varDocId;

        /// <summary>
        /// Gets or sets the value of variable varDocId.
        /// </summary>
        [TestVariable("fa37624d-4d66-40e1-bcfa-195bdc0cbe01")]
        public string varDocId
        {
            get { return _varDocId; }
            set { _varDocId = value; }
        }

        string _varInc;

        /// <summary>
        /// Gets or sets the value of variable varInc.
        /// </summary>
        [TestVariable("da979d29-d64f-46a5-b191-2f6e5086e3a2")]
        public string varInc
        {
            get { return _varInc; }
            set { _varInc = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            varDocId = ValueConverter.ToString(CworkTestLib.UserCodeCollectionProgramCwork.GetDocId(ValueConverter.ArgumentFromString<int>("CncId", varCncID), varPrgRef, varUser, varPsw));
            Delay.Milliseconds(0);
            
            varExpectdVersionId = ValueConverter.ToString(CworkTestLib.UserCodeCollectionProgramCwork.GetlasttVer(ValueConverter.ArgumentFromString<int>("CncId", varCncID), ValueConverter.ArgumentFromString<int>("_docId", varDocId), varUser, varPsw));
            Delay.Milliseconds(0);
            
            varExpectdVersionId = ValueConverter.ToString(CworkTestLib.UserCodeCollectionProgramCwork.IncVersionId(ValueConverter.ArgumentFromString<int>("VersionId", varExpectdVersionId), ValueConverter.ArgumentFromString<int>("Inc", varInc)));
            Delay.Milliseconds(0);
            
            CworkTestLib.UserCodeCollectionProgramCwork.CertifyProgramLastVersion(ValueConverter.ArgumentFromString<int>("CncId", varCncID), varPrgRef, varNewStatus, varCertifyComment, ValueConverter.ArgumentFromString<int>("ExpectedVersionId", varExpectdVersionId), varUser, varPsw);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
